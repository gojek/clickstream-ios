// Generated by the protocol buffer compiler.  DO NOT EDIT!
// clang-format off
// source: Device.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30007
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30007 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - DeviceRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface DeviceRoot : GPBRootObject
@end

#pragma mark - Device

typedef GPB_ENUM(Device_FieldNumber) {
  Device_FieldNumber_OperatingSystem = 1,
  Device_FieldNumber_OperatingSystemVersion = 2,
  Device_FieldNumber_DeviceMake = 3,
  Device_FieldNumber_DeviceModel = 4,
};

/**
 *
 * Corresponds to the device being used by the customer. Holds the respective details for the device under use.
 **/
GPB_FINAL @interface Device : GPBMessage

/**
 *
 * Operating system of the device.
 * Sample values: "iOS", "Android".
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *operatingSystem;

/**
 *
 * Version of the Operating system.
 * Sample values: "29", "15.1".
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *operatingSystemVersion;

/**
 *
 * Device manufacturer name.
 * Sample values: "Samsung", "HMD Global", "Apple"
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceMake;

/**
 *
 * Device model information.
 * Sample values: "iPhone 11", "Samsung M90".
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceModel;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

// clang-format on
